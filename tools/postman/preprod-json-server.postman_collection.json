{
	"info": {
		"_postman_id": "2d599e73-6c84-4801-807a-21e0a32a3ee1",
		"name": "preprod-json-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "profiles",
			"item": [
				{
					"name": "get profiles data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/profile",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "get profile data by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/profile/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"profile",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create profile",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Alex\",\r\n    \"age\": 18\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/profile",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "update profile data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Name\",\r\n    \"age\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/profile/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"profile",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete profile",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/profile/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"profile",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "posts",
			"item": [
				{
					"name": "get posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "get post by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"json-server\",\r\n    \"author\": \"Sergey\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/posts",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "update post",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"new json-server\",\r\n    \"author\": \" new Sergey\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/posts/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "partially update post",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"author\": \" new Sergey\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/posts/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts/8",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "! get posts filtering",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts?id=1&id=2",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "id",
									"value": "2"
								}
							]
						},
						"description": "Filter\nUse . to access deep properties\n\nGET /posts?title=json-server&author=typicode\n\nGET /posts?id=1&id=2\n\nGET /comments?author.name=typicode"
					},
					"response": []
				},
				{
					"name": "! sorting posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts?_sort=views&_order=asc",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "_sort",
									"value": "views"
								},
								{
									"key": "_order",
									"value": "asc"
								}
							]
						},
						"description": "Sort\r\nAdd _sort and _order (ascending order by default)\r\n\r\nGET /posts?_sort=views&_order=asc\r\n\r\nGET /posts/1/comments?_sort=votes&_order=asc\r\n\r\nFor multiple fields, use the following format:\r\n\r\nGET /posts?_sort=user,views&_order=desc,asc"
					},
					"response": []
				},
				{
					"name": "! get posts using paginate",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts?_page=1&_limit=2",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "_page",
									"value": "1"
								},
								{
									"key": "_limit",
									"value": "2"
								}
							]
						},
						"description": "Paginate\nUse _page and optionally _limit to paginate returned data.\n\nIn the Link header you'll get first, prev, next and last links.\n\nGET /posts?_page=7\n\nGET /posts?_page=7&_limit=20"
					},
					"response": []
				},
				{
					"name": "! slice",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts?_start=2&_end=5",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "_start",
									"value": "2"
								},
								{
									"key": "_end",
									"value": "5"
								}
							]
						},
						"description": "Slice\n\nAdd _start and _end or _limit (an X-Total-Count header is included in the response)\n\nGET /posts?_start=20&_end=30\n\nGET /posts/1/comments?_start=20&_end=30\n\nGET /posts/1/comments?_start=20&_limit=10\n\nWorks exactly as Array.slice (i.e. _start is inclusive and _end exclusive)"
					},
					"response": []
				},
				{
					"name": "! operators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts?views_gte=4&views_lte=8",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "views_gte",
									"value": "4"
								},
								{
									"key": "views_lte",
									"value": "8"
								}
							]
						},
						"description": "Operators\n\nAdd _gte or _lte for getting a range\n\nGET /posts?views_gte=10&views_lte=20\n\nAdd _ne to exclude a value\n\nGET /posts?id_ne=1\n\nAdd _like to filter (RegExp supported)\n\nGET /posts?title_like=server"
					},
					"response": []
				},
				{
					"name": "! Full-text search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts?q=hamed",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "q",
									"value": "hamed"
								}
							]
						},
						"description": "Full-text search\r\n\r\nAdd q\r\n\r\nGET /posts?q=internet"
					},
					"response": []
				},
				{
					"name": "! Relationships",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/posts?_embed=comments",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "_embed",
									"value": "comments"
								}
							]
						},
						"description": "Relationships\n\nTo include children resources, add _embed\n\nGET /posts?_embed=comments\n\nGET /posts/1?_embed=comments\n\nTo include parent resource, add _expand\n\nGET /comments?_expand=post\n\nGET /comments/1?_expand=post\n\nTo get or create nested resources (by default one level, add custom routes for more)\n\nGET  /posts/1/comments\n\nPOST /posts/1/comments"
					},
					"response": []
				}
			]
		},
		{
			"name": "comments",
			"item": [
				{
					"name": "get comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/comments",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "get comment by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/comments/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"some new comment\",\r\n    \"postId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/comments",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit comment",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"some new text\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}:{{port}}/comments/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}:{{port}}/comments/1",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost"
		},
		{
			"key": "port",
			"value": "3004"
		}
	]
}